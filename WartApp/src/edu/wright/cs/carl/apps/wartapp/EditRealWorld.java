/*
 * EditRealWorld.java
 *
 * Created on January 30, 2009, 6:58 AM
 */

package edu.wright.cs.carl.apps.wartapp;

import java.io.IOException;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.swing.*;

import edu.wright.cs.carl.comm.*;

import edu.wright.cs.carl.wart.agent.Agent;
import edu.wright.cs.carl.wart.agent.mod.khepera.real.KheperaReal;

import edu.wright.cs.carl.wart.real.AgentWorldReal;

import org.jdesktop.application.Action;


/**
 *
 * @author  Duane
 */
public class EditRealWorld extends javax.swing.JDialog {

    private AgentWorldReal world;
    private Map<String, Agent> availableAgents;
    
    private DefaultListModel connectedAgentListModel;
    private DefaultListModel activeAgentListModel;
    
    /** Creates new form EditRealWorld */
    public EditRealWorld(AgentWorldReal world) {
        super(WartApp.getApplication().getMainFrame(), false);
        
        this.world = world;
        this.availableAgents = new HashMap<String, Agent>();
        this.connectedAgentListModel = new DefaultListModel();
        this.activeAgentListModel = new DefaultListModel();
        
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        connectedAgentList = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        activeAgentList = new javax.swing.JList();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(edu.wright.cs.carl.apps.wartapp.WartApp.class).getContext().getResourceMap(EditRealWorld.class);
        setTitle(resourceMap.getString("EditRealWorldForm.title")); // NOI18N
        setModal(true);
        setName("EditRealWorldForm"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        connectedAgentList.setModel(this.connectedAgentListModel);
        connectedAgentList.setName("connectedAgentList"); // NOI18N
        jScrollPane1.setViewportView(connectedAgentList);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(edu.wright.cs.carl.apps.wartapp.WartApp.class).getContext().getActionMap(EditRealWorld.class, this);
        jButton1.setAction(actionMap.get("autoDetectAgents")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        jButton2.setAction(actionMap.get("addToActiveList")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N

        jSeparator1.setName("jSeparator1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        activeAgentList.setModel(this.activeAgentListModel);
        activeAgentList.setName("activeAgentList"); // NOI18N
        jScrollPane2.setViewportView(activeAgentList);

        jButton3.setAction(actionMap.get("removeFromActiveList")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N

        jButton5.setAction(actionMap.get("cancelEditRealWorld")); // NOI18N
        jButton5.setName("jButton5"); // NOI18N

        jButton6.setAction(actionMap.get("okEditRealWorld")); // NOI18N
        jButton6.setText(resourceMap.getString("jButton6.text")); // NOI18N
        jButton6.setName("jButton6"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 250, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jLabel2)
                    .addComponent(jButton3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    @Action
    public void autoDetectAgents()
    {
        List<Communicator> availableCommunicators = CommUtils.GetAvailableCommunicators();
        
        //
        // TODO:  Search through the modules (that is, packages named
        // edu.wright.cs.carl.wart.agent.mod.[agentName].real) for other
        // agent types.  For now, this just checks for Khepera.
        //        
        Iterator<Communicator> it = availableCommunicators.iterator();
        Communicator currentCommunicator = null;
        KheperaReal khepera = null;
        String newAgentName = null;
        
        while(it.hasNext()) {
            currentCommunicator = it.next();
            
            khepera = new KheperaReal("Khepera");
            newAgentName = null;
            
            try {
                if(khepera.isAgentType(currentCommunicator)) {
                    khepera.setCommunicator(currentCommunicator);
                    while(newAgentName == null) {
                        newAgentName = JOptionPane.showInputDialog(this, "Please name this Khepera:");
                        if(this.availableAgents.containsKey(newAgentName)) {
                            newAgentName = null;
                            JOptionPane.showMessageDialog(rootPane, "Name is already taken.  Please enter a different name.");
                        }                
                    }
                    khepera.setName(newAgentName);
                    this.availableAgents.put(newAgentName, khepera);
                    this.connectedAgentListModel.addElement(newAgentName);

                    //
                    // TODO: Put this in a better place...  Probably in the context.  Just get rid of the
                    // RealAgent interface, and add start() and stop() methods to Agent.
                    //
                    khepera.start();
                }
            }
            catch(IOException e) {
                e.printStackTrace();
            }
        } // End while loop on Communicators.
        
        if(this.connectedAgentListModel.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No agents were found.  Please check all connections and try again.");
        }
    }

    @Action
    public void addToActiveList()
    {
        int selectedIndex = this.connectedAgentList.getSelectedIndex();
        if(selectedIndex < 0) {
            return;
        }
        
        String agentName = (String) this.connectedAgentList.getSelectedValue();
        
        if(agentName == null) {
            JOptionPane.showMessageDialog(this.getRootPane(), "The selected agent name does not exist.");
            return;
        }        
        
        Agent selectedAgent = this.availableAgents.get(agentName);
        
        if(selectedAgent == null) {
            JOptionPane.showMessageDialog(this.getRootPane(), "The selected agent does not exist.");
            this.connectedAgentListModel.removeElement(agentName);
            return;
        }
        
        this.activeAgentListModel.addElement(agentName);
        this.world.addAgent(selectedAgent);
    }

    @Action
    public void removeFromActiveList()
    {
        int selectedIndex = this.activeAgentList.getSelectedIndex();
        if(selectedIndex < 0) {
            return;
        }
        
        String agentName = (String) this.activeAgentList.getSelectedValue();
        
        if(agentName == null) {
            JOptionPane.showMessageDialog(this.getRootPane(), "The selected agent name does not exist.");
            return;
        }
        
        Agent removedAgent = this.world.removeAgent(agentName);
        
        if(removedAgent == null) {
            JOptionPane.showMessageDialog(this.getRootPane(), "The selected agent does not exist.");
            this.activeAgentListModel.removeElement(agentName);
            this.connectedAgentListModel.removeElement(agentName);
            return;
        }        
        
        this.activeAgentListModel.removeElement(agentName);
    }


    @Action
    public void okEditRealWorld()
    {
        this.world.setIsReady(true);
        this.setVisible(false);
        this.dispose();
        return;        
    }

    @Action
    public void cancelEditRealWorld()
    {
        this.world.setIsReady(false);
        this.setVisible(false);
        this.dispose();
        return;        
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList activeAgentList;
    private javax.swing.JList connectedAgentList;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

}
